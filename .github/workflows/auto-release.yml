name: Auto Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check for skip release
        id: check_skip
        run: |
          if git log -1 --pretty=%B | grep -q "\[skip release\]"; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "跳过发布（commit消息包含 [skip release]）"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Bump version and create tag
        if: steps.check_skip.outputs.skip == 'false'
        id: bump_version
        run: |
          # 自动patch版本
          npm version patch --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "version=v$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "新版本: v$NEW_VERSION"
          
          # 提交版本更新
          git add package.json
          git commit -m "chore: release v$NEW_VERSION [skip release]"
          
          # 创建并推送标签
          git tag "v$NEW_VERSION"
          git push origin main --tags

      - name: Create GitHub Release
        if: steps.check_skip.outputs.skip == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.version }}
          name: Release ${{ steps.bump_version.outputs.version }}
          body: |
            ## 🚀 自动发布 ${{ steps.bump_version.outputs.version }}
            
            ### 📝 更新内容
            ${{ github.event.head_commit.message }}
            
            ### 📦 安装
            ```bash
            bun add @pddo/tronscan-api-sdk@${{ steps.bump_version.outputs.new_version }}
            ```
            
            或
            
            ```bash
            npm install @pddo/tronscan-api-sdk@${{ steps.bump_version.outputs.new_version }}
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        if: steps.check_skip.outputs.skip == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Success notification
        if: steps.check_skip.outputs.skip == 'false'
        run: |
          echo "🎉 成功发布版本 ${{ steps.bump_version.outputs.version }}"
          echo "📦 NPM链接: https://www.npmjs.com/package/@pddo/tronscan-api-sdk" 